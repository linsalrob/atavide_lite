#!/bin/bash
#PBS -P ob80
#PBS -q normal
#PBS -l ncpus=32
#PBS -l mem=190GB
#PBS -l jobfs=400GB
#PBS -l walltime=3:00:00
#PBS -l wd
#PBS -l other=hyperthread
#PBS -l storage=scratch/ob80+gdata/ob80
#PBS -N mmseqs


set -euo pipefail
eval "$(conda shell.bash hook)"
conda activate bioinformatics


mkdir -p $PBS_JOBFS/tmp $PBS_JOBFS/mmseqs
FAFILEEND="_R1.fasta.gz"
R=`basename ${R1:-}`
OUT=${R/$FAFILEEND/}
if [[ -e mmseqs/$OUT/ ]]; then echo "${R1:-} Nothing to do!" >&2; exit 0; fi

DB=$HOME/databases/UniRef50/UniRef50

if [[ ! -e $DB ]]; then
	echo "No UniRef database found" >&2;
	exit 1;
fi

if [[ ${R1:-} ]] &&  [[ ${R2:-} ]]; then
	mmseqs easy-taxonomy $R1 $R2 $DB $PBS_JOBFS/mmseqs/$OUT $(mktemp -d -p $PBS_JOBFS/tmp) --threads 32
elif [[ ${R1:-} ]]; then
	mmseqs easy-taxonomy $R1 $DB $PBS_JOBFS/mmseqs/$OUT $(mktemp -d -p $PBS_JOBFS/tmp) --threads 32
elif [[ ${R2:-} ]]; then
	FAFILEEND="_R2.fasta.gz"
	R=`basename ${R2:-}`
	OUT=${R/$FAFILEEND/}
	if [[ -e mmseqs/$OUT/ ]]; then echo "${R2:-} Nothing to do!" >&2; exit 0; fi
	mmseqs easy-taxonomy $R2 $DB $PBS_JOBFS/mmseqs/$OUT $(mktemp -d -p $PBS_JOBFS/tmp) --threads 32
fi

find $PBS_JOBFS/mmseqs/ -type f -exec pigz {} \;

mkdir -p mmseqs/$OUT/
rsync -a  $PBS_JOBFS/mmseqs/ mmseqs/$OUT/


